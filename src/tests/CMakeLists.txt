if(ENABLE_TESTING)  
  # Please place additional tests in alphabetical order
find_package(Boost 1.57.0 REQUIRED COMPONENTS unit_test_framework)
  list(APPEND test_cases test_adiis)
  list(APPEND test_cases test_aobasis)
  list(APPEND test_cases test_aomatrix)
  list(APPEND test_cases test_aomatrix3d)
  list(APPEND test_cases test_aotransform)
  list(APPEND test_cases test_aopotential)
  list(APPEND test_cases test_atom)
  list(APPEND test_cases test_qmatom)
  list(APPEND test_cases test_polarsegment)
  list(APPEND test_cases test_qmmolecule)
  list(APPEND test_cases test_basisset)
  list(APPEND test_cases test_bfgs-trm)
  list(APPEND test_cases test_bse)
  list(APPEND test_cases test_convergenceacc)
  list(APPEND test_cases test_dftcoupling)
  list(APPEND test_cases test_diis)
  list(APPEND test_cases test_eigen)
  list(APPEND test_cases test_eris)
  list(APPEND test_cases test_espfit)
  list(APPEND test_cases test_glink)
  list(APPEND test_cases test_hdf5)
  list(APPEND test_cases test_numericalintegration)
  list(APPEND test_cases test_orbitals)
  list(APPEND test_cases test_polarsite)
  list(APPEND test_cases test_ppm)
  list(APPEND test_cases test_qmnblist)
  list(APPEND test_cases test_qmpair)
  list(APPEND test_cases test_qmstate)
  list(APPEND test_cases test_radial_euler_maclaurin_rule)
  list(APPEND test_cases test_rpa)
  list(APPEND test_cases test_segment)
  list(APPEND test_cases test_aoshell)
  list(APPEND test_cases test_sphere_lebedev_rule)
  list(APPEND test_cases test_statetracker)
  list(APPEND test_cases test_symmetric_matrix)
  list(APPEND test_cases test_threecenter)
<<<<<<< HEAD
  list(APPEND test_cases test_hdf5)
  list(APPEND test_cases test_eris)
  list(APPEND test_cases test_espfit)
  list(APPEND test_cases test_rpa)
  list(APPEND test_cases test_rpa_eigenvalues)
  list(APPEND test_cases test_ppm)
=======
  list(APPEND test_cases test_topology)
>>>>>>> electrostatics
  list(APPEND test_cases test_sigma_ppm)
  list(APPEND test_cases test_sigma_exact)
  list(APPEND test_cases test_gw)
  list(APPEND test_cases test_bse_operator)
  list(APPEND test_cases test_davidson)
  list(APPEND test_cases test_trustregion)
  list(APPEND test_cases test_gnode)
  list(APPEND test_cases test_vc2index)
  list(APPEND test_cases test_grid)
  list(APPEND test_cases test_segmentmapper)
  list(APPEND test_cases test_eeinteractor)
  list(APPEND test_cases test_hist)
  list(APPEND test_cases test_qmfragment)
  list(APPEND test_cases test_jobtopology)
  list(APPEND test_cases test_dipoledipoleinteraction)
  list(APPEND test_cases test_populationanalysis)
list(APPEND test_cases test_gaussian)
list(APPEND test_cases test_orca)
list(APPEND test_cases test_nwchem)
list(APPEND test_cases test_dftengine)
list(APPEND test_cases test_bsecoupling)
list(APPEND test_cases test_rate_engine)

  foreach(PROG ${test_cases} )
    add_executable(unit_${PROG} ${PROG}.cc)
    target_link_libraries(unit_${PROG} votca_xtp ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
    target_compile_definitions(unit_${PROG} PRIVATE BOOST_TEST_DYN_LINK)
    add_test(unit_${PROG} unit_${PROG})
    # run tests for xtp (for coverage) as well
    set_tests_properties(unit_${PROG} PROPERTIES LABELS "xtp;votca")
  endforeach(PROG)
endif()
